// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeddingPlanner.Data.Repository;

namespace WeddingPlanner.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeddingPlanner.Data.Entities.AffiliateLinks", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vendorid")
                        .HasColumnType("int");

                    b.Property<int?>("vendorsid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("vendorsid");

                    b.ToTable("affiliate-links");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Budget", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("taxrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalcost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("budget");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Expenses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Budgetid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Budgetid");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Guests", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("planid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("planid");

                    b.ToTable("guests");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Images", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Vendorsid")
                        .HasColumnType("int");

                    b.Property<int>("imagetype")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vendorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Vendorsid");

                    b.ToTable("images");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Plan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Scheduleid")
                        .HasColumnType("int");

                    b.Property<int>("budgetid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Scheduleid");

                    b.ToTable("plan");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Schedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("id");

                    b.ToTable("schedule");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Planid")
                        .HasColumnType("int");

                    b.Property<int?>("rolesid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Planid");

                    b.HasIndex("rolesid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Vendors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Planid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ratetype")
                        .HasColumnType("int");

                    b.Property<int>("servicetype")
                        .HasColumnType("int");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Planid");

                    b.ToTable("vendors");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.AffiliateLinks", b =>
                {
                    b.HasOne("WeddingPlanner.Data.Entities.Vendors", "vendors")
                        .WithMany("affiliatelinks")
                        .HasForeignKey("vendorsid");

                    b.Navigation("vendors");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Expenses", b =>
                {
                    b.HasOne("WeddingPlanner.Data.Entities.Budget", null)
                        .WithMany("expenses")
                        .HasForeignKey("Budgetid");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Guests", b =>
                {
                    b.HasOne("WeddingPlanner.Data.Entities.Plan", null)
                        .WithMany("Guests")
                        .HasForeignKey("planid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Images", b =>
                {
                    b.HasOne("WeddingPlanner.Data.Entities.Vendors", null)
                        .WithMany("images")
                        .HasForeignKey("Vendorsid");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Plan", b =>
                {
                    b.HasOne("WeddingPlanner.Data.Entities.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("Scheduleid");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Users", b =>
                {
                    b.HasOne("WeddingPlanner.Data.Entities.Plan", null)
                        .WithMany("Users")
                        .HasForeignKey("Planid");

                    b.HasOne("WeddingPlanner.Data.Entities.Roles", "roles")
                        .WithMany("users")
                        .HasForeignKey("rolesid");

                    b.Navigation("roles");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Vendors", b =>
                {
                    b.HasOne("WeddingPlanner.Data.Entities.Plan", null)
                        .WithMany("Vendors")
                        .HasForeignKey("Planid");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Budget", b =>
                {
                    b.Navigation("expenses");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Plan", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("Users");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Roles", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("WeddingPlanner.Data.Entities.Vendors", b =>
                {
                    b.Navigation("affiliatelinks");

                    b.Navigation("images");
                });
#pragma warning restore 612, 618
        }
    }
}
